#+TITLE: Technologies - Part 2
#+AUTHOR: vinci
#+OPTIONS: toc

* Table of Contents :toc:
- [[#databases][Databases]]
- [[#sql-datastores][SQL Datastores]]
  - [[#relational-database-service-rds][Relational Database Service (RDS)]]
  - [[#aurora-rds-aurora][Aurora (RDS Aurora)]]
  - [[#aurora-serverless-v2][Aurora Serverless V2]]
  - [[#redshift][Redshift]]
- [[#nosql-datastores][NoSQL Datastores]]
  - [[#dynamodb][DynamoDB]]
  - [[#documentdb][DocumentDB]]
  - [[#keyspaces][Keyspaces]]
  - [[#neptune][Neptune]]
  - [[#elasticache][ElastiCache]]
  - [[#opensearch-service][OpenSearch Service]]
  - [[#amazon-quantum-ledger-database-services-qldb][Amazon Quantum Ledger Database Services (QLDB)]]
  - [[#timestream][Timestream]]
- [[#application-integration][Application Integration]]
  - [[#amazon-simple-notification-service-sns][Amazon Simple Notification Service (SNS)]]
  - [[#amazon-simple-queue-service-sqs][Amazon Simple Queue Service (SQS)]]
  - [[#amazon-elastic-load-balancing][Amazon Elastic Load Balancing]]
  - [[#amazon-autoscaling][Amazon Autoscaling]]
  - [[#other-services][Other Services]]
- [[#management][Management]]
  - [[#cloudformation][CloudFormation]]
  - [[#opsworks][OpsWorks]]
  - [[#systems-manager][Systems Manager]]
  - [[#aws-organizations][AWS Organizations]]
  - [[#aws-service-catalog][AWS Service Catalog]]
  - [[#aws-control-tower][AWS Control Tower]]
  - [[#aws-config--aws-cloudtrail][AWS Config & AWS CloudTrail]]
  - [[#other-management-services][Other Management Services]]
- [[#migration-and-transfer][Migration and Transfer]]
  - [[#the-cloud-adoption-framework][The Cloud Adoption Framework]]
  - [[#aws-migration-hub][AWS Migration Hub]]
  - [[#migration-strategies][Migration Strategies]]
  - [[#offline-migration][Offline Migration]]
  - [[#online-migration][Online Migration]]
  - [[#moving-applications-databases-and-whole-racks-of-servers-to-aws][Moving applications, databases, and whole racks of servers to AWS]]

* Databases
Types of databases(datastores) in AWS:
1. Self-Managed Datastores
   - Full control over the database
   - Database running on EC2 VMs or ECS or EKS
   - Increased control and flexibility
   - Increased operational overhead and responsibility
   - For specific software or security requirements
2. SQL Datastores
   - Relationship with tables
   - Used for complex relationships with data
   - For transactional or reporting use cases
3. NoSQL Datastores
   - For simple but specific needs for data
   - Search, high performance, documents

* SQL Datastores
All RDS services features encryption, replication, scaling and more.

RDS and Redshift are the primary SQL database systems.

RDS has 5 flavors it supports, Oracle, MySQL, MariaDB, MS SQL, PostgreSQL

** Relational Database Service (RDS)
- Managed service for databases
- Transactional processing
- Hard to grow in size and performance

** Aurora (RDS Aurora)
- Managed service for databases
- Cloud native
- Higher capacity and performance
- Grows more easily than the main RDS service

** Aurora Serverless V2
- Managed service for databases
- Cloud native
- Higher capacity and performance
- Capacity can go up and down and much easier than other RDS services
- Pay a little for storage but not compute when you are not using it

** Redshift
- Data warehouse, not transactional
- Petabyte scale
- Serverless and "Server"-ed versions
- Reporting and not E-commerce or web traffic

* NoSQL Datastores

** DynamoDB
- Lightning fast key-value datastore of AWS

** DocumentDB
- Store data and retrieve documents that are more like a collection of data
  - Essays
  - Profiles
- MongoDB compatibility

** Keyspaces
- For large-scale unstructured data that has more structure to it
- DB that can run in many different locations across the planet
- Cassandra compatibility

** Neptune
- Detect relationships between data
- For usage like fraud detection or social network relationships

** ElastiCache
Offers two service for in memory database
1. Memcached
2. Redis

For caching or tracking user session data

** OpenSearch Service
- Searching through a bunch of information like a google search that give relevant or related results

** Amazon Quantum Ledger Database Services (QLDB)
- DB with an immutable record of every change in the database

** Timestream
- Captures data from various sources at high scale and maintains the timestamp

* Application Integration
Manipulating traffic/communication between applications.

** Amazon Simple Notification Service (SNS)
Used in between applications when a user wants to send a message to customers via text, email, or mobile, or you want to copy a single message to multiple applications.

** Amazon Simple Queue Service (SQS)
When sending a message to another application and user traffic ramps up, the messages will be put in a queue until our backend can process them.

Basically controlling the flow of messages as to not overload the backend.

** Amazon Elastic Load Balancing
Spread the load evenly across a bunch of services.

Used to direct traffic to backend servers and distributes workloads evenly. Unhealthy servers are not available if failing.

Can be used with EC2, and Lambda among others.

** Amazon Autoscaling
Allow to scale up and down to numbers you specify within the specified limits.

** Other Services
- Amazon AppFlow
  - Solves the problem of copying data from 3rd party services into AWS
- Amazon EventBridge
  - Coordinates events across applications
- Amazon MQ
  - Managed Queue is like SQS but using open-source software instead of AWS proprietary
- Amazon Step Functions
  - Organize serverless functions so they can work like a full application

* Management
Management services are services that manage other services.

Provision or optimizes other AWS services.

** CloudFormation
Creates other AWS services using files.

** OpsWorks
Installs specific software into your servers.

** Systems Manager
E2E management solution for resources on AWS and on premise environments.

** AWS Organizations
Centrally govern and manage multiple AWS accounts

** AWS Service Catalog
Takes in CloudFormation and Terraform creation templates and turn them into a vending machine for your users on AWS.

** AWS Control Tower
Helps you set up AWS organizations in a secure best practice way with auditing, logging, and compliance rules in place.

** AWS Config & AWS CloudTrail
*AWS Config* is used to record and evaluate all configuration and changes in your AWS services.

*AWS CloudTrail* is a service that tracks and records all user and API activity in your AWS account.

** Other Management Services
- Launch Wizard
  - Walks you on setting up 3rd party applications on AWS
- Licence Manager
  - Track licences in AWS (from other companies)
- Computer Optimizer
  - Tells you when you are being inefficient in AWS with Compute.
- Trusted Advisor
  - A best practice advisor that tells you when you are not following best practices.
- Resource Explorer
  - Allows you to search and discover your resources on AWS
- Resource Group and Tag Editor
  - A way to group, tag, and manage your services

* Migration and Transfer

** The Cloud Adoption Framework
It is a way of thinking about different concerns, perspective and areas for 6 key areas:
1. Business
2. People
3. Governance
4. Platform
5. Security
6. Operations

** AWS Migration Hub
Allows you to centralize and see all migration you have in place via AWS services.

** Migration Strategies

*** Rehosting (Lift-and-Shift)
Basically taking a server as it is and moving to AWS. No changing of applications, databases, etc. A literal copy and paste to the cloud.

Easiest and quickest way to migrate but with the least benefits when moving/migrating to AWS.

*** Replatforming (Lift, Tinker, and Shift)
Almost similar with /rehosting/ but with a few changes on the platform like the OS for example.

*** Refactoring (or Rearchitecting)
Most invasive and time consuming migration strategy.

Radically changes a traditional server and migrate to AWS by rearchitecturing the whole system architecture to AWS services.

Gets the most benefit in all aspect of AWS engagement.

*** Repurchasing
Basically repurchasing a service but on AWS instead of in a traditional server.

*** Retaining (Do Nothing)
Keeping the traditional server until it retires.

*** Retiring

** Offline Migration

*** The Snow Family

**** Snowball Edge Storage Optimized
- Small compute
- Medium data
- Data transfer 80TB

**** Snowball Edge Compute Optimized
- Medium compute
- Small data
- Portable compute

**** Snowmobile
- No compute
- Large data
- 100 PB of data

**** Snowcone
- Small compute
- Small storage
- Portable compute

** Online Migration

*** Transfer Family

**** FTP Version
Transfer family for FTP that supports FTPS, SFTP, and more secure transfer to S3 or EFS.

**** AS2 Version
Transfer family for AS2 that supports using AS2 to send and receive messages using S3 as the backend.

**** AWS DataSync
Secure and online service that automates and accelerates moving data between on premise and AWS storage services.

** Moving applications, databases, and whole racks of servers to AWS

*** Application Discovery Service
Discover information about the applications to migrate.

*** Application Migration Service
Move and improve applications to AWS.

*** Database Migration Service
Migrate database to AWS as a one time thing or continuosly.

*** Elastic Disaster Recovery
Fast, reliable recovery.

Copies disks, tracks all the changes and puts it in small EC2 instances that gets upsized and makes it live and can transfer traffic over to the instances

*** Mainframe Modernization
Mainframe migration engineering.
